{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://schemas.grasple.com/v0.0.1/parameter.json",
  "definitions": {
    "generators": {
      "description": "All parameters which generate values",
      "oneOf": [
        {"allOf": [{ "$ref": "#/definitions/range"}, {"properties": {"type": {"const": "range"}}}]},
        {"allOf": [{ "$ref": "#/definitions/random"}, {"properties": {"type": {"const": "random"}}}]},
        {"allOf": [{ "$ref": "#/definitions/dataset_filebased"}, {"properties": {"type": {"const": "dataset_filebased"}}}]},
        {"allOf": [{ "$ref": "#/definitions/dataset_sample"}, {"properties": {"type": {"const": "dataset_sample"}}}]},
        {"allOf": [{ "$ref": "#/definitions/distribution_normal"}, {"properties": {"type": {"const": "distribution_normal"}}}]},
        {"allOf": [{ "$ref": "#/definitions/distribution_student_t"}, {"properties": {"type": {"const": "distribution_student_t"}}}]},
        {"allOf": [{ "$ref": "#/definitions/distribution_chi_2"}, {"properties": {"type": {"const": "distribution_chi_2"}}}]}
      ]
    },
    "transformers": {
      "description": "All parameters which transform an input to an output",
      "oneOf": [
        {"allOf": [{"$ref": "#/definitions/argument"}, {"properties": {"type": {"const": "argument"}}}]},
        {"allOf": [{"$ref": "#/definitions/cumulative_distribution_function"}, {"properties": {"type": {"const": "cumulative_distribution_function"}}}]},
        {"allOf": [{"$ref": "#/definitions/dataset_correlation"}, {"properties": {"type": {"const": "dataset_correlation"}}}]},
        {"allOf": [{"$ref": "#/definitions/dataset_linear_regression_ols"}, {"properties": {"type": {"const": "dataset_linear_regression_ols"}}}]},
        {"allOf": [{"$ref": "#/definitions/derivative"}, {"properties": {"type": {"const": "derivative"}}}]},
        {"allOf": [{"$ref": "#/definitions/display_decimal_with_base"}, {"properties": {"type": {"const": "display_decimal_with_base"}}}]},
        {"allOf": [{"$ref": "#/definitions/display_expression_with_mixed_numbers"}, {"properties": {"type": {"const": "display_expression_with_mixed_numbers"}}}]},
        {"allOf": [{"$ref": "#/definitions/formula"}, {"properties": {"type": {"const": "formula"}}}]},
        {"allOf": [{"$ref": "#/definitions/round"}, {"properties": {"type": {"const": "round"}}}]},
        {"allOf": [{"$ref": "#/definitions/imaginary_part"}, {"properties": {"type": {"const": "imaginary_part"}}}]},
        {"allOf": [{"$ref": "#/definitions/integral"}, {"properties": {"type": {"const": "integral"}}}]},
        {"allOf": [{"$ref": "#/definitions/interval"}, {"properties": {"type": {"const": "interval"}}}]},
        {"allOf": [{"$ref": "#/definitions/inverse"}, {"properties": {"type": {"const": "inverse"}}}]},
        {"allOf": [{"$ref": "#/definitions/length"}, {"properties": {"type": {"const": "length"}}}]},
        {"allOf": [{"$ref": "#/definitions/left_hand_side"}, {"properties": {"type": {"const": "left_hand_side"}}}]},
        {"allOf": [{"$ref": "#/definitions/limit"}, {"properties": {"type": {"const": "limit"}}}]},
        {"allOf": [{"$ref": "#/definitions/matrix_columnspace"}, {"properties": {"type": {"const": "matrix_columnspace"}}}]},
        {"allOf": [{"$ref": "#/definitions/matrix_determinant"}, {"properties": {"type": {"const": "matrix_determinant"}}}]},
        {"allOf": [{"$ref": "#/definitions/matrix_diagonalize"}, {"properties": {"type": {"const": "matrix_diagonalize"}}}]},
        {"allOf": [{"$ref": "#/definitions/matrix_eigenvalues"}, {"properties": {"type": {"const": "matrix_eigenvalues"}}}]},
        {"allOf": [{"$ref": "#/definitions/matrix_eigenvectors"}, {"properties": {"type": {"const": "matrix_eigenvectors"}}}]},
        {"allOf": [{"$ref": "#/definitions/matrix_nullspace"}, {"properties": {"type": {"const": "matrix_nullspace"}}}]},
        {"allOf": [{"$ref": "#/definitions/matrix_rank"}, {"properties": {"type": {"const": "matrix_rank"}}}]},
        {"allOf": [{"$ref": "#/definitions/matrix_shape"}, {"properties": {"type": {"const": "matrix_shape"}}}]},
        {"allOf": [{"$ref": "#/definitions/matrix_transpose"}, {"properties": {"type": {"const": "matrix_transpose"}}}]},
        {"allOf": [{"$ref": "#/definitions/max"}, {"properties": {"type": {"const": "max"}}}]},
        {"allOf": [{"$ref": "#/definitions/mean"}, {"properties": {"type": {"const": "mean"}}}]},
        {"allOf": [{"$ref": "#/definitions/median"}, {"properties": {"type": {"const": "median"}}}]},
        {"allOf": [{"$ref": "#/definitions/min"}, {"properties": {"type": {"const": "min"}}}]},
        {"allOf": [{"$ref": "#/definitions/mode"}, {"properties": {"type": {"const": "mode"}}}]},
        {"allOf": [{"$ref": "#/definitions/plot_2d"}, {"properties": {"type": {"const": "plot_2d"}}}]},
        {"allOf": [{"$ref": "#/definitions/probability_distribution_function"}, {"properties": {"type": {"const": "probability_distribution_function"}}}]},
        {"allOf": [{"$ref": "#/definitions/product"}, {"properties": {"type": {"const": "product"}}}]},
        {"allOf": [{"$ref": "#/definitions/quantile"}, {"properties": {"type": {"const": "quantile"}}}]},
        {"allOf": [{"$ref": "#/definitions/read_decimal_with_base"}, {"properties": {"type": {"const": "read_decimal_with_base"}}}]},
        {"allOf": [{"$ref": "#/definitions/read_expression_with_mixed_numbers"}, {"properties": {"type": {"const": "read_expression_with_mixed_numbers"}}}]},
        {"allOf": [{"$ref": "#/definitions/real_part"}, {"properties": {"type": {"const": "real_part"}}}]},
        {"allOf": [{"$ref": "#/definitions/right_hand_side"}, {"properties": {"type": {"const": "right_hand_side"}}}]},
        {"allOf": [{"$ref": "#/definitions/row_reduced_echelon_form"}, {"properties": {"type": {"const": "row_reduced_echelon_form"}}}]},
        {"allOf": [{"$ref": "#/definitions/select"}, {"properties": {"type": {"const": "select"}}}]},
        {"allOf": [{"$ref": "#/definitions/substitute"}, {"properties": {"type": {"const": "substitute"}}}]},
        {"allOf": [{"$ref": "#/definitions/sum"}, {"properties": {"type": {"const": "sum"}}}]},
        {"allOf": [{"$ref": "#/definitions/unique"}, {"properties": {"type": {"const": "unique"}}}]},
        {"allOf": [{"$ref": "#/definitions/variance"}, {"properties": {"type": {"const": "variance"}}}]}
      ]
    },
    "value_parameter": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter formatted as a latex string with optional parameter references",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        }
      },
      "required": ["value"]
    },
    "answer_rule_definition": {
      "type": "object",
      "properties": {
        "rule_definition": {"$ref": "./exercise.schema.json#/definitions/rule_definition"},
        "type": {"const": "answer_rule_definition"}
      },
      "required": ["rule_definition"]
    },
    "argument": {
      "description": "Calculates the argument of a complex number (see https://en.wikipedia.org/wiki/Argument_(complex_analysis))",
      "$ref": "#/definitions/value_parameter"
    },
    "cumulative_distribution_function": {
      "type": "object",
      "properties": {
        "distribution": {
          "description": "A distribution defined by one of the distribution function",
          "$ref": "./content-types.schema.json#/definitions/parameter_name"
        },
        "x": {
          "description": "The value on which the CDF needs to be computed",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        }
      },
      "required": ["distribution", "x"]
    },
    "dataset_correlation": {
      "type": "object",
      "properties": {
        "dataset_x": {
          "description": "The name of the parameter referring to the first data-set to correlate",
          "$ref": "./content-types.schema.json#/definitions/parameter_name"
        },
        "dataset_y": {
          "description": "The name of the parameter referring to the second data-set to correlate",
          "$ref": "./content-types.schema.json#/definitions/parameter_name"
        },
        "method": {
          "type": "string",
          "enum": ["spearman", "pearson", "kendall"]
        }
      },
      "required": ["dataset_x", "dataset_y"]
    },
    "dataset_filebased": {
      "type": "object",
      "properties": {
        "filename": {
          "description": "The name of the file which is uploaded",
          "type": "string"
        },
        "downloadable": {
          "description": "If this dataset can be downloaded by the user",
          "type": "boolean"
        }
      },
      "required": ["filename", "downloadable"]
    },
    "dataset_linear_regression_ols": {
      "type": "object",
      "$ref": "#/definitions/value_parameter",
      "properties": {
        "coefficient": {
          "description": "List of coefficients to be used used in the regression. All coefficients should be formatted as a latex string with optional parameter names",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["value", "coefficient"]
    },
    "dataset_sample": {
      "type": "object",
      "properties": {
        "dataset": {
          "description": "The name of the parameter referring to the data-set to sample",
          "$ref": "./content-types.schema.json#/definitions/parameter_name"
        },
        "sample_size": {
          "description": "How many rows need to be sampled from the given dataset",
          "type": "integer"
        },
        "filename": {
          "description": "The name of the file which is uploaded",
          "type": "string"
        },
        "downloadable": {
          "description": "If this dataset can be downloaded by the user",
          "type": "boolean"
        }
      },
      "required": ["filename", "downloadable", "dataset", "sample_size"]
    },
    "derivative": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter formatted as a latex string with optional parameter references",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "arg": {
          "description": "The variable which to differentiate to",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        }
      },
      "required": ["value", "arg"]
    },
    "display_decimal_with_base": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter formatted as a latex string with optional parameter references",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "base": {
          "description": "The base to convert to",
          "type": "string",
          "enum": ["binary", "octal", "decimal", "hexadecimal"]
        }
      },
      "required": ["value", "base"]
    },
    "display_expression_with_mixed_numbers": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter formatted as a latex string with mixed numbers i.s.o. improper fractions",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        }
      },
      "required": ["value"]
    },
    "distribution_chi_2": {
      "type": "object",
      "properties": {
        "df": {
          "description": "The degrees of freedom",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        }
      },
      "required": ["df"]
    },
    "distribution_normal": {
      "type": "object",
      "properties": {
        "mu": {
          "description": "The mean of the distribution (default 0)",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "sigma": {
          "description": "The standard deviation of the distribution (default 1)",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        }
      },
      "required": ["mu", "sigma"]
    },
    "distribution_student_t": {
      "type": "object",
      "properties": {
        "df": {
          "description": "The degrees of freedom",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        }
      },
      "required": ["df"]
    },
    "formula": {
      "$ref": "#/definitions/value_parameter"
    },
    "round": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter formatted as a latex string with optional parameter references",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "decimals": {
          "description": "The number of decimals to round to",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "method": {
          "description": "The method to use for rounding",
          "type": "string",
          "enum": ["half_towards_even", "half_away_from_zero", "half_towards_zero", "away_from_zero", "towards_zero", "up", "down"]
        }
      },
      "required": ["value", "decimals", "method"]
    },
    "imaginary_part": {
      "$ref": "#/definitions/value_parameter"
    },
    "integral": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter formatted as a latex string with optional parameter references",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "arg": {
          "description": "The variable which to integrate to",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "sub": {
          "description": "The lower bounds of the interval to integrate on",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "sup": {
          "description": "The upper bounds of the interval to integrate on",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        }
      },
      "required": ["value", "arg"]
    },
    "interval": {
      "$ref": "#/definitions/value_parameter"
    },
    "inverse": {
      "$ref": "#/definitions/value_parameter"
    },
    "length": {
      "$ref": "#/definitions/value_parameter"
    },
    "left_hand_side": {
      "$ref": "#/definitions/value_parameter"
    },
    "limit": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter formatted as a latex string with optional parameter references",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "arg": {
          "description": "The variable to calculate the limit of",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "approach": {
          "description": "The value which arg approaches",
          "type": "string"
        },
        "direction": {
          "description": "The direction in which the limit should be calculated",
          "type": "string",
          "enum": ["+", "-"]
        }
      },
      "required": ["value", "arg", "approach"]
    },
    "matrix_columnspace": {
      "$ref": "#/definitions/value_parameter"
    },
    "matrix_determinant": {
      "$ref": "#/definitions/value_parameter"
    },
    "matrix_diagonalize": {
      "$ref": "#/definitions/value_parameter"
    },
    "matrix_eigenvalues": {
      "$ref": "#/definitions/value_parameter"
    },
    "matrix_eigenvectors": {
      "$ref": "#/definitions/value_parameter"
    },
    "matrix_nullspace": {
      "$ref": "#/definitions/value_parameter"
    },
    "matrix_rank": {
      "$ref": "#/definitions/value_parameter"
    },
    "matrix_shape": {
      "$ref": "#/definitions/value_parameter"
    },
    "matrix_transpose": {
      "$ref": "#/definitions/value_parameter"
    },
    "max": {
      "$ref": "#/definitions/value_parameter"
    },
    "mean": {
      "$ref": "#/definitions/value_parameter"
    },
    "median": {
      "$ref": "#/definitions/value_parameter"
    },
    "min": {
      "$ref": "#/definitions/value_parameter"
    },
    "mode": {
      "$ref": "#/definitions/value_parameter"
    },
    "plot_2d": {
      "type": "object",
      "properties": {
        "lines": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "description": "Value to plot",
                "$ref": "./content-types.schema.json#/definitions/latex_expression"
              },
              "color": {
                "description": "Color of the line to plot in hexadecimal format",
                "type": "string"
              },
              "label": {
                "description": "label to show in the legend for this line",
                "$ref": "./content-types.schema.json#/definitions/latex_expression"
              }
            }
          }
        },
        "x_min": {
          "description": "The minimum value of the x-axes, default -10",
          "type": "integer"
        },
        "x_max": {
          "description": "The maximum value of the x-axes, default 10",
          "type": "integer"
        },
        "y_min": {
          "description": "The minimum value of the y-axes, default -10",
          "type": "integer"
        },
        "y_max": {
          "description": "The maximum value of the y-axes, default 10",
          "type": "integer"
        },
        "x_label": {
          "description": "The label to show on the x-axes",
          "type": "string"
        },
        "y_label": {
          "description": "The label to show on the y-axes",
          "type": "string"
        },
        "hide_legend": {
          "description": "If true, the legend should not be shown in the generated image",
          "type": "boolean"
        }
      },
      "required": [
        "lines"
      ]
    },
    "probability_distribution_function": {
      "type": "object",
      "properties": {
        "distribution": {
          "description": "A distribution defined by one of the distribution function",
          "$ref": "./content-types.schema.json#/definitions/parameter_name"
        },
        "x": {
          "description": "The value on which the PDF needs to be computed",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        }
      },
      "required": ["distribution", "x"]
    },
    "product": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The formula to apply the product to",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "index": {
          "description": "The symbol used for the index",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "lower_bound": {
          "description": "The initial integer value for the index",
          "type": "integer"
        },
        "upper_bound": {
          "description": "The final integer value for the index",
          "type": "integer"
        }
      },
      "required": ["value", "index", "lower_bound", "upper_bound"]
    },
    "quantile": {
      "type": "object",
      "properties": {
        "distribution": {
          "description": "A distribution defined by one of the distribution function",
          "$ref": "./content-types.schema.json#/definitions/parameter_name"
        },
        "percentile": {
          "description": "The required quantile (a number between 0 and 1)",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        }
      },
      "required": ["distribution", "percentile"]
    },
    "random": {
      "type": "object",
      "properties": {
        "min": {
          "description": "The minimum value which can be generated",
          "type": "integer"
        },
        "max": {
          "description": "The maximum value which can be generated",
          "type": "integer"
        },
        "decimals": {
          "description": "The number of decimals to use in generating values",
          "type": "integer"
        }
      },
      "required": ["min", "max", "decimals"]
    },
    "range": {
      "type": "object",
      "properties": {
        "min": {
          "description": "The minimum value which can be generated",
          "type": "integer"
        },
        "max": {
          "description": "The maximum value which can be generated",
          "type": "integer"
        },
        "step": {
          "description": "The step size to be used in generating values",
          "type": "integer"
        }
      },
      "required": ["min", "max", "step"]
    },
    "read_decimal_with_base": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter formatted as a latex string with optional parameter references",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "base": {
          "description": "The base to read from",
          "type": "string",
          "enum": ["binary", "octal", "decimal", "hexadecimal"]
        }
      },
      "required": ["value", "base"]
    },
    "read_expression_with_mixed_numbers": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter formatted as a latex string with optional parameter references",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        }
      },
      "required": ["value"]
    },
    "real_part": {
      "$ref": "#/definitions/value_parameter"
    },
    "right_hand_side": {
      "$ref": "#/definitions/value_parameter"
    },
    "row_reduced_echelon_form": {
      "$ref": "#/definitions/value_parameter"
    },
    "select": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter formatted as a latex string with optional parameter references",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "first_index": {
          "description": "The first index to be used in selecting a value",
          "type": "integer"
        },
        "second_index": {
          "description": "The second index to be used in selecting a value",
          "type": "integer"
        }
      },
      "required": ["value", "first_index"]
    },
    "standard_deviation": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter formatted as a latex string with optional parameter references",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "method": {
          "description": "The method to use for sampling",
          "type": "string",
          "enum": ["sample", "population"]
        }
      },
      "required": ["value", "method"]
    },
    "substitute": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter formatted as a latex string with optional parameter references",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "subs": {
          "description": "The values to substitute",
          "type": "array",
          "prefixItems": [{"type": "string"}, {"type": "string"}]
        }
      },
      "required": ["value", "first_index"]
    },
    "sum": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The formula to apply the sum to",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "index": {
          "description": "The symbol used for the index",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "lower_bound": {
          "description": "The initial integer value for the index",
          "type": "integer"
        },
        "upper_bound": {
          "description": "The final integer value for the index",
          "type": "integer"
        }
      },
      "required": ["value", "index", "lower_bound", "upper_bound"]
    },
    "unique": {
      "$ref": "#/definitions/value_parameter"
    },
    "variance": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for this parameter formatted as a latex string with optional parameter references",
          "$ref": "./content-types.schema.json#/definitions/latex_expression"
        },
        "method": {
          "description": "The method to use for sampling",
          "type": "string",
          "enum": ["sample", "population"]
        }
      },
      "required": ["value", "method"]
    }
  }
}
